<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.project.projectcomm.mapper.CommMapper">
    <resultMap id="commMap" type="CommDto" autoMapping="true">
        <id property="commId" column="comm_id"/>
        <result property="userId" column="user_id"/>
        <result property="commImgId" column="comm_img_id"/>
        <result property="openStatus" column="open_status"/>
        <result property="commStatus" column="comm_status"/>
        <result property="regDate" column="reg_date"/>
        <result property="modDate" column="mod_date"/>
        <association property="user"
                     column="user_id"
                     select="com.project.projectcomm.mapper.UserMapper.selectByUserId"
                     fetchType="lazy"
                     autoMapping="true"/>
        <association property="commLikesView"
                     resultMap="commLikesViewMap"
                     fetchType="lazy"/>
        <collection property="imgList"
                    column="comm_img_id"
                    select="com.project.projectcomm.mapper.CommImgMapper.listByCommImgId"
                    fetchType="lazy"/>
    </resultMap>

    <resultMap id="commLikesViewMap" type="CommLikesViewDto">
        <association property="likes"
                     select="com.project.projectcomm.mapper.CommLikesMapper.countByCommIdAndLikesIsTrue"
                     column="comm_id"/>
        <association property="bads"
                     select="com.project.projectcomm.mapper.CommLikesMapper.countByCommIdAndLikesIsFalse"
                     column="comm_id"/>
    </resultMap>

    <insert id="insertOne" parameterType="CommDto" useGeneratedKeys="true" keyProperty="commId">
        INSERT INTO comm (user_id, title, content, open_status, comm_img_id)
        VALUES (#{userId}, #{title}, #{content}, #{openStatus}, #{commImgId})
    </insert>

    <update id="updateOne" parameterType="CommDto">
        UPDATE comm SET title=#{title}, content=#{content}, open_status=#{openStatus}, comm_img_id=#{commImgId}, mod_date=NOW()
                    WHERE comm_id=#{commId}
    </update>

    <update id="updateOpen">
        UPDATE comm SET open_status=#{open}
                    WHERE comm_id=#{id}
    </update>

    <update id="updateStatus">
        UPDATE comm SET comm_status=#{status}
                    WHERE comm_id=#{id}
    </update>

    <update id="updateViews">
        UPDATE comm SET views=views+1
                    WHERE comm_id=#{id}
    </update>

    <delete id="deleteByCommId">
        DELETE FROM comm WHERE comm_id=#{id}
    </delete>

    <delete id="deleteByUserId">
        DELETE FROM comm WHERE user_id=#{id}
    </delete>

    <select id="countByUserId" resultType="int">
        SELECT count(*) FROM comm WHERE user_id=#{id}
    </select>

    <select id="selectByCommId" resultMap="commMap">
        SELECT * FROM comm WHERE comm_id=#{id}
    </select>

    <select id="listByUserId" resultMap="commMap">
        SELECT * FROM comm WHERE user_id=#{id}
    </select>

    <select id="listAll" resultMap="commMap">
        SELECT * FROM comm
    </select>
    <select id="cateList" resultMap="commMap">
        SELECT ROW_NUMBER() OVER() AS num_row, final.*
        FROM (SELECT ci.* FROM
        (SELECT comm.* FROM comm LEFT JOIN cate_conn cc on comm.comm_id = cc.comm_id
        <where>
            <if test="cateIdList != null and !cateIdList.isEmpty()">
                AND cc.cate_id in
                <foreach item="item" index="index" collection="cateIdList"
                         open="(" separator="," close=")">#{item}
                </foreach>
            </if>
        </where>
        GROUP BY comm.comm_id) as ci) as final
    </select>

    <select id="countLikesByCommId" resultMap="commLikesViewMap">
        SELECT * FROM comm WHERE comm_id=#{id}
    </select>

</mapper>